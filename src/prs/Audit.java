/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package prs;


import com.mysql.jdbc.Connection;
import java.beans.PropertyVetoException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import mymod.dbconnector;
import mymod.voidmodule;

/**
 *
 * @author wan
 */
public class Audit extends javax.swing.JInternalFrame {
 Connection con = (Connection) dbconnector.conn();
    /**
     * Creates new form Audit
     */
    public Audit() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_auditResult = new javax.swing.JTable();
        lblcount = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cmd_process = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl_auditResult.setAutoCreateRowSorter(true);
        tbl_auditResult.setBackground(new java.awt.Color(255, 255, 204));
        tbl_auditResult.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tbl_auditResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_auditResult.setRowHeight(24);
        jScrollPane1.setViewportView(tbl_auditResult);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE))
        );

        lblcount.setText("Counter");
        lblcount.setOpaque(true);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        cmd_process.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/process.jpg"))); // NOI18N
        cmd_process.setText("Process");
        cmd_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_processActionPerformed(evt);
            }
        });
        jPanel2.add(cmd_process);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/exit.jpg"))); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblcount, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblcount, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void auditProcess() {
        String sql = "SELECT 1 as ErrorCode,\n"
                + "     \"Disease\" AS F_Key_Table,\n"
                + "     \"Subblock\" AS F_Key_Field,\n"
                + " icd10_deasease.`d_Subblock` AS F_Key_Field_Value,\n"
                + "icd10_deasease.`d_Group` as For_KeyCode,\n"
                + "     \"Not Found in Subblock Table\" AS ErrorDes\n"
                + "\n"
                + "FROM\n"
                + "     `icd10_deasease` icd10_deasease LEFT OUTER JOIN `icd10_subblock` icd10_subblock ON icd10_deasease.`d_Subblock` = icd10_subblock.`d_Subblock`\n"
                + "WHERE\n"
                + "     ifnull(icd10_subblock.`d_Subblock`,'n') = 'n'\n"
                + "union all\n"
                + "SELECT 2 as ErrorCode,\n"
                + "     \"SubBlock\" AS F_Key_Table,\n"
                + "     \"BlockCode\" AS F_Key_Field,\n"
                + "\n"
                + "     icd10_subblock.`d_Subblock` AS F_Key_Field_Value,\n"
                + "icd10_subblock.`d_subblock` as For_KeyCode,\n"
                + "\"Not Found in Block Table\" AS ErrorDes\n"
                + "FROM\n"
                + "     `icd10_subblock` icd10_subblock LEFT OUTER JOIN `icd10_block` icd10_block ON icd10_subblock.`d_block` = icd10_block.`d_block`\n"
                + "WHERE\n"
                + "     ifnull(icd10_block.`d_block`,'n') = 'n'\n"
                + "union all\n"
                + "SELECT 3 as ErrorCode,\n"
                + "     \"Disease\" AS F_Key_Table,\n"
                + "     \"IMMRCode\" AS F_Key_Field,\n"
                + " icd10_deasease.`d_immrNo` AS F_Key_Field_Value,\n"
                + "icd10_immr.`d_Group` as For_KeyCode,\n"
                + "     \"Not Found in IMMR Table\" AS ErrorDes\n"
                + "\n"
                + "FROM\n"
                + "     `icd10_deasease` icd10_deasease LEFT OUTER JOIN `icd10_immr` icd10_immr ON icd10_deasease.`d_immrNo` = icd10_immr.`d_immrNo`\n"
                + "WHERE\n"
                + "     ifnull(icd10_immr.`d_immrNo`,'n') = 'n'\n"
                + "union all\n"
                + "SELECT 4 as ErrorCode,\n"
                + "     \"Admission\" AS F_Key_Table,\n"
                + "     \"Admission Type\" AS F_Key_Field,\n"
                + "     admissions.`adm_type` AS F_Key_Field_Value,\n"
                + "     \"Not Found in Admission Items Table\" AS ErrorDes,\n"
                + "     admissions.`bhtno` AS For_KeyCode\n"
                + "\n"
                + "FROM\n"
                + "     `admissions` admissions LEFT OUTER JOIN `admision_items` admision_items ON admissions.`adm_type` = admision_items.`it_code`\n"
                + "WHERE\n"
                + "     ifnull(admision_items.`it_code`,'n') = 'n'\n"
                + "union all\n"
                + "SELECT 5 as ErrorCode,\n"
                + "     \"Admission\" AS F_Key_Table,\n"
                + "     \"Admission Type\" AS F_Key_Field,\n"
                + "admision_items.`adm_code` AS F_Key_Field_Value,\n"
                + "\n"
                + "admision_items.`it_code` AS For_KeyCode,\n"
                + "\"Not Found in Admission Items Table\" AS ErrorDes\n"
                + "\n"
                + "\n"
                + "FROM\n"
                + "     `admission_types` admission_types RIGHT OUTER JOIN `admision_items` admision_items ON admission_types.`adm_code` = admision_items.`adm_code`\n"
                + "WHERE\n"
                + "     ifnull(admission_types.`adm_code`,'n') = 'n'\n"
                + "union all\n"
                + "SELECT 6 as ErrorCode,\n"
                + "     \"Diagnose\" AS F_Key_Table,\n"
                + "     \"Disease Code\" AS F_Key_Field,\n"
                + "diagnose.`d_group` AS F_Key_Field_Value,\n"
                + " diagnose.`bhtno` AS For_KeyCode,\n"
                + "     \"Not Found in Disease Table\" AS ErrorDes\n"
                + "\n"
                + "\n"
                + "FROM\n"
                + "     `diagnose` diagnose LEFT OUTER JOIN `icd10_deasease` icd10_deasease ON diagnose.`d_group` = icd10_deasease.`d_Group`\n"
                + "WHERE\n"
                + "     ifnull(icd10_deasease.`d_group`,'n') = 'n'\n"
                + "union all\n"
                + "SELECT 7 as ErrorCode,\n"
                + "     \"Admission\" AS F_Key_Table,\n"
                + "     \"PID Number\" AS F_Key_Field,\n"
                + "admissions.`bhtno` AS For_KeyCode,\n"
                + "admissions.`pidno` AS F_Key_Field_Value,\n"
                + "     \"Not Found in Register Table\" AS ErrorDes\n"
                + "\n"
                + "FROM\n"
                + "     `register` register RIGHT OUTER JOIN `admissions` admissions ON register.`pid` = admissions.`pidno`\n"
                + "WHERE\n"
                + "     ifnull(register.`pid`,'n') = 'n'\n"
                + "union all\n"
                + "SELECT 8 as ErrorCode,\n"
                + "     \"Admission\" AS F_Key_Table,\n"
                + "     \"Hospital ID\" AS F_Key_Field,\n"
                + "     admissions.`hospid` AS F_Key_Field_Value,\n"
                + "\n"
                + "     admissions.`bhtno` AS For_KeyCode,\n"
                + "\"Not Found in Hospital Table\" AS ErrorDes\n"
                + "FROM\n"
                + "     `admissions` admissions LEFT OUTER JOIN `hospital` hospital ON admissions.`hospid` = hospital.`sno`\n"
                + "WHERE\n"
                + "     ifnull(hospital.`sno`,'n') = 'n' and  admissions.`adm_type`='8'\n"
                + "\n"
                + "union all\n"
                + "SELECT 9 as ErrorCode,\n"
                + "     \"Diagnosis\" AS F_Key_Table,\n"
                + "     \"Hospital ID\" AS F_Key_Field,\n"
                + "\n"
                + "\n"
                + "diagnose.`hospid` AS F_Key_Field_val,\n"
                + "diagnose.`bhtno` AS For_KeyCode,\n"
                + "\n"
                + "     \"Not Found in Hospital Table\" AS ErrorDes\n"
                + "\n"
                + "FROM\n"
                + "     `diagnose` diagnose LEFT OUTER JOIN `hospital` hospital ON diagnose.`hospid` = hospital.`sno`\n"
                + "WHERE\n"
                + "     ifnull(hospital.`sno`,'n') = 'n'\n"
                + "     and diagnose.`dis_code` = '3'\n"
                + "\n"
                + "union all\n"
                + "SELECT 10 as ErrorCode,\n"
                + "     \"Wards\" AS F_Key_Table,\n"
                + "     \"Ward No\" AS F_Key_Field,\n"
                + "     \"Not Found in Hospital Table\" AS ErrorDes,\n"
                + "     wards.`w_num` AS F_Key_Field_val,\n"
                + "\n"
                + "     admissions.`bhtno` AS For_KeyCode\n"
                + "FROM\n"
                + "     `wards` wards RIGHT OUTER JOIN `admissions` admissions ON wards.`w_num` = admissions.`w_num`\n"
                + "WHERE\n"
                + "     ifnull(wards.`w_num`,'n') = 'n'\n"
                + "union all\n"
                + "SELECT\n"
                + "     11 AS ErrorCode,\n"
                + "     \"Register\" AS F_Key_Table,\n"
                + "     \"Religion\" AS F_Key_Field,\n"
                + "register.`religion` AS F_Key_Field_val,\n"
                + "     register.`pid` AS For_KeyCode,\n"
                + "     \"Not Found in Register Table\" AS ErrorDes\n"
                + "\n"
                + "FROM\n"
                + "     `register` register LEFT OUTER JOIN `religion` religion ON register.`religion` = religion.`religion`\n"
                + "WHERE\n"
                + "     ifnull(religion.`religion`,'n') = 'n'\n"
                + "union all\n"
                + "SELECT\n"
                + "     12 AS ErrorCode,\n"
                + "     \"Diagnosis\" AS F_Key_Table,\n"
                + "     \"Bhtno\" AS F_Key_Field,\n"
                + "  admissions.`bhtno` AS For_KeyCode,\n"
                + "diagnose.`bhtno` AS F_Key_Field_val,\n"
                + "     \"Not Found in Admission Table\" AS ErrorDes\n"
                + "\n"
                + "\n"
                + "FROM\n"
                + "     `diagnose` diagnose LEFT OUTER JOIN `admissions` admissions ON diagnose.`bhtno` = admissions.`bhtno`\n"
                + "WHERE\n"
                + "     ifnull(admissions.`bhtno`,'n') = 'n'";
        int[] colomnwidths={50,100,100,200,200,300};
     ResultSet resultSet = wans_javalib.RecordManipulator.getResultSet(con, sql);
     try {
         wans_javalib.Tables.setTableModel(resultSet, tbl_auditResult, sql, colomnwidths);
         int count = voidmodule.RCount(sql);
         lblcount.setText("  Number of Records : =  " + count);
         lblcount.setBackground(new java.awt.Color(255, 255, 204));
        
     } catch (SQLException ex) {
         Logger.getLogger(Audit.class.getName()).log(Level.SEVERE, null, ex);
     }
        
    }
    private void cmd_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_processActionPerformed
       auditProcess();
     try {
         this.setMaximum(true);
     } catch (PropertyVetoException ex) {
         Logger.getLogger(Audit.class.getName()).log(Level.SEVERE, null, ex);
     }
    }//GEN-LAST:event_cmd_processActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_process;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblcount;
    private javax.swing.JTable tbl_auditResult;
    // End of variables declaration//GEN-END:variables
}
